{"name":"Taskqueue","tagline":"A task queue that uses a thread pool to complete tasks in parallel.","body":"TaskQueue\r\n===================\r\n*Author: Kyle Heath (cmakesnap [at] gmail)*\r\n\r\n[![Build Status](https://travis-ci.org/heathkh/taskqueue.png)](https://travis-ci.org/heathkh/taskqueue)\r\n\r\nWhat is TaskQueue\r\n-------------------------------------------------------------------------------\r\n\r\nTaskQueue is a header-only library for executing tasks in parallel with a thread pool built with Boost. To use it all you need to do is copy \"taskqueue.hpp\" to your source tree and link against Boost threads and asio libraries.\r\n\r\nThe repository includes a demo showing how to use it.  There are no docs, only a working toy example for computing a rainbow table to invert hashed passwords using all the cores available on your machine.\r\n\r\nThe repo is large because the demo includes boost for convenience and some unit test libraries for continuous integration testing.\r\n\r\nHow to compile and run demo\r\n-------------------------\r\n1. Get the code\r\n````bash\r\ngit clone git://github.com/heathkh/taskqueue.git\r\n````\r\n\r\n2. If not installed, install tools to compile code (gcc, CMake)\r\n````bash\r\napt-get install g++ cmake\r\n````   \r\n\r\n3. Run the demo script to compile and run the test binary.\r\n````bash\r\ncd taskqueue; chmod +x ./compile_and_run_test.sh; ./compile_and_run_test.sh \r\n````   \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}